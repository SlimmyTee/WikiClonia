@charset "UTF-8";
/* ==========================================================================
   #CONFIG-VARIABLES
   ========================================================================== */
/* ==========================================================================
   #ANIMATIONS-TRANSITIONS-VARIABLES
   ========================================================================== */
/* ==========================================================================
   #BREAKPOINTS-VARIABLES
   ========================================================================== */
/**
 * Breakpoints needed for sass-mq mixin
 */
/* ==========================================================================
   #COLOR-VARIABLES
   ========================================================================== */
/* ==========================================================================
   #SPACING-VARIABLES
   ========================================================================== */
/* ==========================================================================
   #TYPOGRAPHY-VARIABLES
   ========================================================================== */
@font-face {
  font-family: titleFont;
  src: url("./fonts/Tiempos%20Text%20Test/tiempos-text-test-regular.woff"); }

@font-face {
  font-family: textFont;
  src: url("./fonts/Nunito_Sans/NunitoSans-Regular.ttf"); }

@font-face {
  font-family: quoteFont;
  src: url("./fonts/PlayfairDisplay/PlayfairDisplay-Italic.woff2"); }

/* ==========================================================================
   #Z-LAYERS-VARIABLES
   ========================================================================== */
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

::-moz-selection {
  background: #0047b6;
  background: rgba(0, 71, 182, 0.3); }

::selection {
  background: #0047b6;
  background: rgba(0, 71, 182, 0.3); }

::-moz-selection {
  background: #0047b6;
  background: rgba(0, 71, 182, 0.3); }

* {
  -webkit-tap-highlight-color: rgba(0, 71, 182, 0.2); }

*,
*:before,
*:after {
  box-sizing: inherit; }

body {
  display: flex;
  flex-direction: column;
  height: 100vh;
  font-family: "textFont", "Roboto", -apple-system, BlinkMacSystemFont, "Segoe UI", Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
  font-size: 16px;
  line-height: 1.2;
  color: #5B5B5B;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }
  body.is-blocked, body.is-modal-open, body.is-gradpanel-open {
    overflow: hidden; }
  body.is-nav-mobile-open {
    overflow: hidden; }
    @media (min-width: 61.25em) {
      body.is-nav-mobile-open {
        overflow: visible; } }

html {
  box-sizing: border-box; }

a {
  cursor: pointer;
  text-decoration: none;
  color: #B9967F; }

p {
  margin: 0;
  padding: 0; }

button {
  border: none;
  background-color: transparent;
  cursor: pointer; }

/* ==========================================================================
   #CONTAINER-OBJECT
   ========================================================================== */
.o-container {
  padding-right: 16px;
  padding-left: 16px;
  width: 100%;
  max-width: 1200px;
  margin-right: auto;
  margin-left: auto; }
  @media (min-width: 48em) {
    .o-container {
      padding-right: 24px;
      padding-left: 24px; } }
  @media (min-width: 61.25em) {
    .o-container {
      padding-right: 24px;
      padding-left: 24px; } }

/* ==========================================================================
   #WRAPPER-OBJECT
   ========================================================================== */
.o-wrapper {
  flex: 1 0 auto;
  overflow: visible; }

/* ==========================================================================
   #MODAL-OBJECT
   ========================================================================== */
.o-modal {
  transition: transform 0.5s cubic-bezier(0.23, 1, 0.32, 1);
  position: fixed;
  z-index: 4000;
  left: 50%;
  top: 50%;
  display: none;
  width: 600px;
  max-width: 90%;
  max-width: calc(100% - 24px);
  max-height: 90%;
  max-height: calc(100% - 24px);
  overflow-x: hidden;
  overflow-y: auto;
  transform: translate(-50%, -200vh);
  transform: translate(-50%, calc(-100vh - 105%));
  will-change: transform;
  pointer-events: none;
  -webkit-overflow-scrolling: touch; }
  @supports (pointer-events: auto) {
    .o-modal {
      display: block;
      pointer-events: none; } }
  @media (min-width: 48em) {
    .o-modal {
      max-width: calc(100% - 48px);
      max-height: calc(100% - 48px); } }
  @media (min-width: 61.25em) {
    .o-modal {
      max-width: calc(100% - 64px);
      max-height: calc(100% - 64px); } }
  .o-modal.is-active {
    transform: translate(-50%, -50%);
    pointer-events: auto; }

.c-alert {
  display: none;
  position: relative;
  padding: 16px;
  border: 1px solid currentColor;
  margin: 24px 0;
  font-size: 1rem;
  color: #000; }
  .c-alert.is-visible {
    display: block; }
  .c-alert p,
  .c-alert ul {
    margin: 0 0 1em; }
  .c-alert p:last-child,
  .c-alert ul:last-child {
    margin-bottom: 0; }
  @media (min-width: 40em) {
    .c-alert {
      padding: 24px; } }

.c-alert__close-btn {
  position: absolute;
  top: 0;
  right: 0;
  width: 2em;
  height: 2em; }
  .c-alert__close-btn:before {
    content: '×';
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    font-size: 1.2em; }

.c-alert--danger {
  border-color: #ff0000; }

.c-alert--warning {
  border-color: #ffbb40; }

.c-btn {
  transition: transform 0.3s cubic-bezier(0.23, 1, 0.32, 1), color 0.3s cubic-bezier(0.23, 1, 0.32, 1), border-color 0.3s cubic-bezier(0.23, 1, 0.32, 1), background-color 0.3s cubic-bezier(0.23, 1, 0.32, 1);
  display: inline-block;
  padding: 1em 1.5em 1em;
  font-size: 0.8rem;
  font-weight: 700;
  text-transform: uppercase;
  text-decoration: none;
  letter-spacing: 0.1em;
  color: #000;
  border: 1px solid #000;
  cursor: pointer; }
  .c-btn:hover, .c-btn:active, .c-btn:focus {
    color: #5B5B5B;
    border-color: currentColor; }
  .c-btn:active {
    transform: translateY(1px); }
  .c-btn + .c-btn {
    margin-bottom: 8px; }
  @media (min-width: 61.25em) {
    .c-btn {
      padding-right: 2em;
      padding-left: 2em; } }

.c-btn--block {
  display: block;
  width: 100%; }

.c-btn--lg {
  padding-top: 20px;
  padding-bottom: 19px; }
  @media (min-width: 61.25em) {
    .c-btn--lg {
      font-size: 13px; } }

.c-btn--primary {
  border-color: #0047b6;
  color: #fff;
  background-color: #0047b6; }
  .c-btn--primary:hover, .c-btn--primary:active, .c-btn--primary:focus {
    border-color: #000;
    color: #fff;
    background-color: #000; }

.c-btn--secondary {
  border-color: #5B5B5B;
  color: #5B5B5B; }
  .c-btn--secondary:hover, .c-btn--secondary:active, .c-btn--secondary:focus {
    border-color: #000;
    color: #000; }

/* ==========================================================================
   #CUSTOM WEBSITE
   @mixin ========================================================================= */
.menu {
  display: grid;
  grid-template-areas: "logo-btn . setting-btn" ". . .";
  grid-template-rows: -webkit-max-content 1fr;
  grid-template-rows: max-content 1fr;
  grid-template-columns: -webkit-min-content 1fr -webkit-min-content;
  grid-template-columns: min-content 1fr min-content;
  align-items: center;
  position: fixed;
  z-index: 4000;
  width: 100%;
  height: 100vh;
  padding: 2rem 2.5rem; }
  .menu__logo-btn {
    grid-area: logo-btn; }
  .menu__setting-btn {
    grid-area: setting-btn;
    display: flex;
    font-size: 2em;
    font-weight: 300;
    color: #ba9881; }

.content {
  width: 100%; }
  .content__title {
    font-family: 'titleFont';
    font-size: calc(3vw + 2vh + 1vmin); }
  .content__description {
    font-size: calc((4vw + 2vh + 1vmin)*0.2);
    line-height: 2em;
    font-weight: 500;
    padding-top: 2.5rem; }

div[class$="text-wrapper"] {
  border: 1px solid red; }

.designed {
  border: 1px solid blue;
  display: grid;
  grid-template-rows: 65% 35%;
  position: relative;
  width: 100%;
  height: 100vh; }
  .designed__image-wrapper {
    overflow: hidden;
    position: relative; }
  .designed__image {
    position: absolute;
    right: 0;
    top: 0;
    max-width: 100%;
    height: auto; }
  .designed__text-wrapper {
    display: flex;
    flex-direction: column;
    position: absolute;
    top: 55%; }
  .designed__title {
    padding: 0 2rem; }
  .designed__description {
    padding: 0 2rem; }
  @media (min-width: 63.875em) {
    .designed {
      grid-template-rows: 90% 10%; }
      .designed__image {
        width: 60%; }
      .designed__text-wrapper {
        width: 40%;
        flex-flow: column-reverse;
        align-items: center;
        right: 45%;
        top: 20%; }
      .designed__description {
        width: 70%; } }

.harmony {
  width: 100%;
  height: 90vh;
  border: 1px solid blue;
  position: relative; }
  .harmony__image-wrapper {
    position: absolute;
    z-index: 1000;
    width: 35%; }
  .harmony__image {
    width: 100%; }
  .harmony__text-wrapper {
    position: relative;
    z-index: 2000;
    width: 70%;
    margin-left: 20%;
    top: 30%; }

.quote {
  position: relative;
  width: 100%;
  height: 90vh;
  border: 1px solid blue; }
  .quote__image-wrapper {
    position: absolute;
    right: 0;
    top: 20%;
    z-index: 1000;
    width: 45%;
    height: 60vh;
    overflow: hidden; }
  .quote__image {
    height: 100%; }
  .quote__text-wrapper {
    z-index: 2000;
    position: relative;
    width: 70%;
    margin-left: 10%;
    top: calc(20% + 30vh);
    padding-top: 0;
    font-style: italic;
    font-weight: 800;
    font-family: 'quoteFont'; }

/* ==========================================================================
   #CLEARFIX-UTILITY
   ========================================================================== */
.u-clearfix:after {
  content: '' !important;
  display: block !important;
  clear: both !important; }

/* ==========================================================================
   #TEXT-UTILITIES
   ========================================================================== */
.u-text-upper {
  text-transform: uppercase !important; }

.u-text-right {
  text-align: right !important; }

.u-color-dark {
  color: #000 !important; }

/* ==========================================================================
   #VISIBILITY
   ========================================================================== */
/**
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */
.u-hidden-visually {
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  -webkit-clip-path: inset(50%) !important;
          clip-path: inset(50%) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  white-space: nowrap !important;
  width: 1px !important; }

/**
 * Hide visually and from screen readers.
 */
.u-hidden {
  display: none !important; }

@media (min-width: 20em) {
  .u-hidden–mobile {
    display: none !important; } }

@media (min-width: 40em) {
  .u-hidden–phablet {
    display: none !important; } }

@media (min-width: 48em) {
  .u-hidden–tablet {
    display: none !important; } }

@media (min-width: 61.25em) {
  .u-hidden–desktop {
    display: none !important; } }

@media (min-width: 63.875em) {
  .u-hidden–wide {
    display: none !important; } }

@media (min-width: 120em) {
  .u-hidden–hd {
    display: none !important; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
