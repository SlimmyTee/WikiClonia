@charset "UTF-8";
/* ==========================================================================
   #CONFIG-VARIABLES
   ========================================================================== */
/* ==========================================================================
   #ANIMATIONS-TRANSITIONS-VARIABLES
   ========================================================================== */
/* ==========================================================================
   #BREAKPOINTS-VARIABLES
   ========================================================================== */
/**
 * Breakpoints needed for sass-mq mixin
 */
/* ==========================================================================
   #COLOR-VARIABLES
   ========================================================================== */
/* ==========================================================================
   #SPACING-VARIABLES
   ========================================================================== */
/* ==========================================================================
   #TYPOGRAPHY-VARIABLES
   ========================================================================== */
@font-face {
  font-family: titleFont;
  src: url("./fonts/league_gothic.otf"); }

@font-face {
  font-family: textFont;
  src: url("./fonts/GillSans/Gill%20Sans%20Medium.otf"); }

@font-face {
  font-family: textFontBold;
  src: url("./fonts/GillSans/Gill%20Sans%20Bold.otf"); }

@font-face {
  font-family: strongFont;
  src: url("./fonts/GillSans/Gill%20Sans%20Heavy.otf"); }

/* ==========================================================================
   #Z-LAYERS-VARIABLES
   ========================================================================== */
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

::-moz-selection {
  background: #0047b6;
  background: rgba(0, 71, 182, 0.3); }

::selection {
  background: #0047b6;
  background: rgba(0, 71, 182, 0.3); }

::-moz-selection {
  background: #0047b6;
  background: rgba(0, 71, 182, 0.3); }

* {
  -webkit-tap-highlight-color: rgba(0, 71, 182, 0.2); }

*,
*:before,
*:after {
  box-sizing: inherit; }

body {
  display: flex;
  flex-direction: column;
  height: 100vh;
  font-family: "textFont", "Roboto", -apple-system, BlinkMacSystemFont, "Segoe UI", Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
  font-size: 16px;
  line-height: 1.5;
  color: #5B5B5B;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }
  body.is-blocked, body.is-modal-open, body.is-gradpanel-open {
    overflow: hidden; }
  body.is-nav-mobile-open {
    overflow: hidden; }
    @media (min-width: 61.25em) {
      body.is-nav-mobile-open {
        overflow: visible; } }

html {
  box-sizing: border-box; }

a {
  cursor: pointer;
  text-decoration: none;
  color: #5E1511; }

p {
  margin: 0;
  padding: 0; }

strong {
  font-family: strongFont; }

br {
  display: block;
  content: "";
  margin-top: 12px; }

/* ==========================================================================
   #CONTAINER-OBJECT
   ========================================================================== */
.o-container {
  padding-right: 16px;
  padding-left: 16px;
  width: 100%;
  max-width: 1200px;
  margin-right: auto;
  margin-left: auto; }
  @media (min-width: 48em) {
    .o-container {
      padding-right: 24px;
      padding-left: 24px; } }
  @media (min-width: 61.25em) {
    .o-container {
      padding-right: 24px;
      padding-left: 24px; } }

/* ==========================================================================
   #WRAPPER-OBJECT
   ========================================================================== */
.o-wrapper {
  flex: 1 0 auto;
  overflow: visible; }

/* ==========================================================================
   #MODAL-OBJECT
   ========================================================================== */
.o-modal {
  transition: transform 0.5s cubic-bezier(0.23, 1, 0.32, 1);
  position: fixed;
  z-index: 4000;
  left: 50%;
  top: 50%;
  display: none;
  width: 600px;
  max-width: 90%;
  max-width: calc(100% - 24px);
  max-height: 90%;
  max-height: calc(100% - 24px);
  overflow-x: hidden;
  overflow-y: auto;
  transform: translate(-50%, -200vh);
  transform: translate(-50%, calc(-100vh - 105%));
  will-change: transform;
  pointer-events: none;
  -webkit-overflow-scrolling: touch; }
  @supports (pointer-events: auto) {
    .o-modal {
      display: block;
      pointer-events: none; } }
  @media (min-width: 48em) {
    .o-modal {
      max-width: calc(100% - 48px);
      max-height: calc(100% - 48px); } }
  @media (min-width: 61.25em) {
    .o-modal {
      max-width: calc(100% - 64px);
      max-height: calc(100% - 64px); } }
  .o-modal.is-active {
    transform: translate(-50%, -50%);
    pointer-events: auto; }

.c-alert {
  display: none;
  position: relative;
  padding: 16px;
  border: 1px solid currentColor;
  margin: 24px 0;
  font-size: 1rem;
  color: #000; }
  .c-alert.is-visible {
    display: block; }
  .c-alert p,
  .c-alert ul {
    margin: 0 0 1em; }
  .c-alert p:last-child,
  .c-alert ul:last-child {
    margin-bottom: 0; }
  @media (min-width: 40em) {
    .c-alert {
      padding: 24px; } }

.c-alert__close-btn {
  position: absolute;
  top: 0;
  right: 0;
  width: 2em;
  height: 2em; }
  .c-alert__close-btn:before {
    content: '×';
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    font-size: 1.2em; }

.c-alert--danger {
  border-color: #D33455; }

.c-alert--warning {
  border-color: #E5C4A1; }

.c-btn {
  transition: transform 0.3s cubic-bezier(0.23, 1, 0.32, 1), color 0.3s cubic-bezier(0.23, 1, 0.32, 1), border-color 0.3s cubic-bezier(0.23, 1, 0.32, 1), background-color 0.3s cubic-bezier(0.23, 1, 0.32, 1);
  display: inline-block;
  padding: 1em 1.5em 1em;
  font-size: 0.8rem;
  font-weight: 700;
  text-transform: uppercase;
  text-decoration: none;
  letter-spacing: 0.1em;
  color: #000;
  border: 1px solid #000;
  cursor: pointer; }
  .c-btn:hover, .c-btn:active, .c-btn:focus {
    color: #5B5B5B;
    border-color: currentColor; }
  .c-btn:active {
    transform: translateY(1px); }
  .c-btn + .c-btn {
    margin-bottom: 8px; }
  @media (min-width: 61.25em) {
    .c-btn {
      padding-right: 2em;
      padding-left: 2em; } }

.c-btn--block {
  display: block;
  width: 100%; }

.c-btn--lg {
  padding-top: 20px;
  padding-bottom: 19px; }
  @media (min-width: 61.25em) {
    .c-btn--lg {
      font-size: 13px; } }

.c-btn--primary {
  border-color: #0047b6;
  color: #fff;
  background-color: #0047b6; }
  .c-btn--primary:hover, .c-btn--primary:active, .c-btn--primary:focus {
    border-color: #000;
    color: #fff;
    background-color: #000; }

.c-btn--secondary {
  border-color: #5B5B5B;
  color: #5B5B5B; }
  .c-btn--secondary:hover, .c-btn--secondary:active, .c-btn--secondary:focus {
    border-color: #000;
    color: #000; }

.title {
  font-family: "titleFont", -apple-system, BlinkMacSystemFont, "Segoe UI", Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
  font-size: calc(60px - 1vw);
  color: white;
  background-color: black; }

.container {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-template-rows: 3vw 4vw 4vw repeat(60, -webkit-max-content);
  grid-template-rows: 3vw 4vw 4vw repeat(60, max-content);
  margin: 0 20%;
  background-color: #D4D4D4; }
  .container > * {
    border: 1px solid blue; }

.logo {
  grid-column: 1 / span 2;
  grid-row: 1 / span 3; }

.menu {
  grid-column: 3 / -1;
  grid-row: 2; }

.welcome {
  grid-column: 7 / -1;
  grid-row: 4 / span 6; }

.entries {
  grid-column: 1 / 7;
  grid-row: 5 / span 15; }

.gallery {
  grid-column: 7 / -1;
  grid-row: 11 / span 6; }

@media (min-width: 62.5em) and (max-width: 113.74em) {
  .container {
    margin: 3vw 5%; }
    .container .welcome {
      grid-column: 3 / -3;
      grid-row: 4 / span 10; }
    .container .entries {
      grid-column: 1 / -1;
      grid-row: 15 / span 10; }
    .container .recent-entries {
      grid-column: 9 / -1;
      grid-row: 15 / span 10; }
    .container .gallery {
      grid-column: 1 / -1;
      grid-row: 26 / span 10; } }

@media (max-width: 62.49em) {
  .container {
    margin: 2vw 5%;
    grid-template-rows: 20vw 20vw repeat(3, -webkit-max-content);
    grid-template-rows: 20vw 20vw repeat(3, max-content);
    grid-row-gap: 20px; }
    .container .logo {
      grid-column: 5 / span 4;
      grid-row: 1 / span 1; }
    .container .menu {
      grid-column: 1 / -1;
      grid-row: 2; }
    .container .welcome, .container .entries, .container .gallery {
      grid-column: 1 / -1; }
    .container .welcome {
      grid-row: 3; }
    .container .entries {
      grid-row: 4; }
    .container .gallery {
      grid-row: 5; } }

.menu {
  display: grid;
  grid-template-columns: repeat(6, -webkit-max-content);
  grid-template-columns: repeat(6, max-content);
  background-color: #5E1511;
  box-shadow: 10px -10px 0px 0px rgba(94, 21, 17, 0.2); }
  .menu__item {
    display: flex;
    justify-content: center;
    align-items: center;
    color: #E5C4A1;
    margin: 0 1.5vw;
    font-family: titleFont;
    letter-spacing: 1px; }

@media (max-width: 62.49em) {
  .menu {
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(2, 1fr);
    justify-content: center;
    font-size: 4vw; }
    .menu__item {
      margin: 0; } }

.welcome {
  display: grid;
  grid-template-rows: repeat(2, -webkit-max-content);
  grid-template-rows: repeat(2, max-content); }
  .welcome__image {
    width: 100%; }
  .welcome__text {
    padding-right: 30%;
    margin-top: -20px;
    background-color: #F8F6F4; }
  .welcome__title, .welcome__desc {
    padding: 1% 0 1% 4%; }
  .welcome__title {
    font-family: "titleFont", -apple-system, BlinkMacSystemFont, "Segoe UI", Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
    font-size: calc(60px - 1vw);
    color: white;
    background-color: black; }

@media (max-width: 62.49em) {
  .welcome__text {
    width: 100%;
    padding: 0; }
  .welcome__title {
    padding-right: 20%;
    line-height: 1; } }

.entries {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-template-rows: repeat(2, -webkit-max-content);
  grid-template-rows: repeat(2, max-content); }
  .entries__main, .entries__recent {
    grid-column: 1 / -1; }
  @media (min-width: 62.5em) and (max-width: 113.74em) {
    .entries__main {
      grid-column: 1 / span 8; }
    .entries__recent {
      grid-column: 9 / -1; } }

.entries__main {
  background-color: #F8F6F4; }

.entries__header {
  display: flex;
  align-items: center;
  height: 40px;
  background-color: #5E1511;
  padding-left: 4%;
  color: #F8F6F4; }

.entries__main-content {
  padding: 5%; }

.entries__subheader {
  color: #D33455; }

.entries__recent {
  padding: 8% 5%; }

.recent__title, .entry__title {
  font-family: "textFontBold", "Roboto", -apple-system, BlinkMacSystemFont, "Segoe UI", Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif; }

.recent__content {
  -moz-column-count: 2;
       column-count: 2; }

/* ==========================================================================
   #CLEARFIX-UTILITY
   ========================================================================== */
.u-clearfix:after {
  content: '' !important;
  display: block !important;
  clear: both !important; }

/* ==========================================================================
   #TEXT-UTILITIES
   ========================================================================== */
.u-text-upper {
  text-transform: uppercase !important; }

.u-text-right {
  text-align: right !important; }

.u-color-dark {
  color: #000 !important; }

/* ==========================================================================
   #VISIBILITY
   ========================================================================== */
/**
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */
.u-hidden-visually {
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  -webkit-clip-path: inset(50%) !important;
          clip-path: inset(50%) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  white-space: nowrap !important;
  width: 1px !important; }

/**
 * Hide visually and from screen readers.
 */
.u-hidden {
  display: none !important; }

@media (min-width: 20em) {
  .u-hidden–mobile {
    display: none !important; } }

@media (min-width: 40em) {
  .u-hidden–phablet {
    display: none !important; } }

@media (min-width: 48em) {
  .u-hidden–tablet {
    display: none !important; } }

@media (min-width: 61.25em) {
  .u-hidden–desktop {
    display: none !important; } }

@media (min-width: 62.5em) {
  .u-hidden–wide {
    display: none !important; } }

@media (min-width: 113.75em) {
  .u-hidden–hd {
    display: none !important; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
